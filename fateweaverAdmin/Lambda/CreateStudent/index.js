'use strict'

var mysql = require('mysql');
var connection = mysql.createConnection({
    host: 'blootest.c2qh4vkdvsoy.eu-west-2.rds.amazonaws.com',
    user: 'blooware',
    password: 'blooware18',
    port: 3306
});

exports.handler = (event, context, callback) => {
    //var fields = ["Given Name", "Family Name", "DOB", "Gender", "Postcode", "UPN", "ULN", "Tutor Group", "PP", "SEN"];
    //callback(null, event);
    var school_id;

    /*
    context.succeed({
        event : event,
        school_id : school_id,
    });
    */

    connection.query("select * from fateweaver.admins where cognito_id = ? limit 1", [event.account.sub], function (err, results, fields) {
        if (err) {
            console.log("Error getting tutor groups:", err);
        }
        school_id = results[0].school_id;
        console.log("School : " + school_id);
        

        connection.query("select * from fateweaver.tutor_groups where name = ? and school_id = ?", [event.form.tutorGroup, school_id], function (err, results, fields) {
            if (err) {
                console.log("Error getting tutor groups:", err);
            }
    
            if (results.length == 0) {
                var dataGroup = {
                    name: event.form.tutorGroup,
                    description: "Auto Generated By Upload",
                    added: new Date(Date.now()),
                    added_id: event.account.sub,
                    csv: file.fileFullName,
                    school_id: school_id
                }
                connection.query("insert into fateweaver.tutor_groups set ? ", dataGroup, function (error, results, fields) {
    
                    console.log("Student added - There Wasn't a tutor Group");
                    console.log(results.insertId);
                    //now create a student using this group id
                    TutorGroupsAdded.push(event.form.tutorGroup);
                    createStudent(results.insertId, event.form, file);
    
                });
            } else {
                console.log("Student added - There Was a tutor Group");
                console.log(results[0].id);
                createStudent(results[0].id, event.form, file);
                //now create a student using this group id
    
            }
        });
    });
    function delay() {
        return new Promise(resolve => setTimeout(resolve, 300));
    }
    async function createStudent(Group_id, StudentInfo, file) {


        var dset = {
            given_name: StudentInfo["Given Name"],
            family_name: StudentInfo["Family Name"],
            dob: StudentInfo.DOB,
            postcode: StudentInfo.Postcode,
            upn: StudentInfo.UPN,
            uln: StudentInfo.ULN,
            tutor_group_id: Group_id,
            gender: StudentInfo.Gender,
            pp: StudentInfo.PP,
            sen: StudentInfo.SEN,
            school_id: school_id,

            added: new Date(Date.now()),
            added_id: event.account.sub,
            csv: file.fileFullName
        }

        connection.query("select * from fateweaver.students where given_name = ? and postcode = ? and upn = ? and school_id = ?  ", [StudentInfo["Given Name"], StudentInfo.Postcode, StudentInfo.UPN, school_id], function (error, results, fields) {
            if (results.length > 0) {
                //append to Not added
                var jsonStudent = {
                    given_name: StudentInfo["Given Name"],
                    family_name: StudentInfo["Family Name"],
                    dob: StudentInfo.DOB,
                    postcode: StudentInfo.Postcode,
                    upn: StudentInfo.UPN,
                    uln: StudentInfo.ULN,
                    tutor_group_id: Group_id,
                    Duplicate: results[0].id,
                    TutorGroupId: Group_id,
                    gender: StudentInfo.Gender,
                    pp: StudentInfo.PP,
                    sen: StudentInfo.SEN,

                }
                notAdded.push({ jsonStudent });
            } else {
                connection.query("insert into fateweaver.students set ?", [dset], function (error, results, fields) {
                    var jsonStudent = {
                        given_name: StudentInfo["Given Name"],
                        family_name: StudentInfo["Family Name"],
                        dob: StudentInfo.DOB,
                        postcode: StudentInfo.Postcode,
                        upn: StudentInfo.UPN,
                        uln: StudentInfo.ULN,
                        tutor_group_id: Group_id,
                        gender: StudentInfo.Gender,
                        pp: StudentInfo.PP,
                        sen: StudentInfo.SEN,
                    }
                    Added.push({ jsonStudent });
                    console.log(results);
                });

            }
        });

        console.log(Group_id);
        console.log(StudentInfo);
    }


    //stuff
    


}


    /*


    let base64String = event.form.base64String;
    let buffer = new Buffer(base64String, 'base64');
    let fileMime = fileType(buffer);
    let file = getFile(fileMime, buffer);
    let params = file.params;

    s3.putObject(params, function (err, data) {
        if (err) {
            console.log(params);
            return console.log(err);
        }

        s3.getObject({
            Bucket: "fateweaver-files",
            Key: file.fileFullName
        }, function (err, data) {
            if (err) {
                console.log(err, err.stack);
                callback(err);
            } else {
                if (data.Body.toString('ascii') == null) {
                    callback(null, {
                        statusCode: 200,
                        status: false,
                        errMsg: "Couldn't Detect CSV file"
                    });
                } else {
                    console.log("Raw text:\n" + data.Body.toString('ascii'));
                    var JsonData = csvTojs(data.Body.toString('ascii').replace("\r", "") + "*")
                    if (JsonData.length <= 1) {
                        callback(null, {
                            statusCode: 200,
                            status: false,
                            errMsg: "Couldn't find any data in the CSV file"
                        });
                    } else {
                        processFields(fields, JsonData);
                    }
                }
            }
        });
    });

    var Added = [];
    var notAdded = [];
    var TutorGroupsAdded = [];
    //callback(null, "List");
    function delay() {
        return new Promise(resolve => setTimeout(resolve, 300));
    }

    async function delayedJsonData(item) {
        // This is where i would add them to mysql


        connection.query("select * from fateweaver.tutor_groups where name = ? and school_id = ?", [item["Tutor Group"], school_id], function (err, results, fields) {
            if (err) {
                console.log("Error getting tutor groups:", err);
            }

            if (results.length == 0) {
                var dataGroup = {
                    name: item["Tutor Group"],
                    description: "Auto Generated By Upload",
                    added: new Date(Date.now()),
                    added_id: event.account.sub,
                    csv: file.fileFullName,
                    school_id: school_id
                }
                connection.query("insert into fateweaver.tutor_groups set ? ", dataGroup, function (error, results, fields) {

                    console.log("Student added - There Wasn't a tutor Group");
                    console.log(results.insertId);
                    //now create a student using this group id
                    TutorGroupsAdded.push(item["Tutor Group"]);
                    createStudent(results.insertId, item, file);

                });
            } else {
                console.log("Student added - There Was a tutor Group");
                console.log(results[0].id);
                createStudent(results[0].id, item, file);
                //now create a student using this group id

            }
        });

        await delay();

    }
    async function processJsonData(array) {
        for (const item of array) {
            await delayedJsonData(item);
        }


        console.log("Finished Itterating");
        context.succeed({
            Done: Added,
            NotDone: notAdded,
            TutorGroupsAdded: TutorGroupsAdded

        });
    }



    function delay() {
        return new Promise(resolve => setTimeout(resolve, 300));
    }

    async function delayedFields(field, JsonData) {

        if (JsonData[0][field] != null) {
            console.log(field);
        } else {


            callback(null, {
                statusCode: 200,
                status: false,
                errMsg: "couldn't find the field named " + field,
            });
        }
        console.log(JsonData)
        await delay();
        console.log(fields);
    }
    async function processFields(array, JsonData) {
        for (const item of array) {
            await delayedFields(item, JsonData);
        }
        console.log("Finished Itterating through the fields");
        console.log("Now i would do this json data :")
        console.log(JsonData);
        processJsonData(JsonData);
        //Now process the students

    }

    async function createStudent(Group_id, StudentInfo, file) {


        var dset = {
            given_name: StudentInfo["Given Name"],
            family_name: StudentInfo["Family Name"],
            dob: StudentInfo.DOB,
            postcode: StudentInfo.Postcode,
            upn: StudentInfo.UPN,
            uln: StudentInfo.ULN,
            tutor_group_id: Group_id,
            gender: StudentInfo.Gender,
            pp: StudentInfo.PP,
            sen: StudentInfo.SEN,
            school_id: school_id,

            added: new Date(Date.now()),
            added_id: event.account.sub,
            csv: file.fileFullName
        }

        connection.query("select * from fateweaver.students where given_name = ? and postcode = ? and upn = ? and school_id = ?  ", [StudentInfo["Given Name"], StudentInfo.Postcode, StudentInfo.UPN, school_id], function (error, results, fields) {
            if (results.length > 0) {
                //append to Not added
                var jsonStudent = {
                    given_name: StudentInfo["Given Name"],
                    family_name: StudentInfo["Family Name"],
                    dob: StudentInfo.DOB,
                    postcode: StudentInfo.Postcode,
                    upn: StudentInfo.UPN,
                    uln: StudentInfo.ULN,
                    tutor_group_id: Group_id,
                    Duplicate: results[0].id,
                    TutorGroupId: Group_id,
                    gender: StudentInfo.Gender,
                    pp: StudentInfo.PP,
                    sen: StudentInfo.SEN,

                }
                notAdded.push({ jsonStudent });
            } else {
                connection.query("insert into fateweaver.students set ?", [dset], function (error, results, fields) {
                    var jsonStudent = {
                        given_name: StudentInfo["Given Name"],
                        family_name: StudentInfo["Family Name"],
                        dob: StudentInfo.DOB,
                        postcode: StudentInfo.Postcode,
                        upn: StudentInfo.UPN,
                        uln: StudentInfo.ULN,
                        tutor_group_id: Group_id,
                        gender: StudentInfo.Gender,
                        pp: StudentInfo.PP,
                        sen: StudentInfo.SEN,
                    }
                    Added.push({ jsonStudent });
                    console.log(results);
                });

            }
        });

        console.log(Group_id);
        console.log(StudentInfo);
    }

    */
//}